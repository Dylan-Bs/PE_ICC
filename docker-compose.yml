version: '3'

services:
    mongodb:
        restart: always
        image: mongo:4.2.6        
        container_name: mongo
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: dockerpswd
            MONGO_INITDB_DATABASE: pe_database
        hostname: mongodb-server
        volumes:
            - ./PEBackend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

            - data-volume:/data/db
        ports:
            - "27017:27017"
        networks:
            - backend
    
    rabbitmq:
        image: rabbitmq:3.8-management
        container_name: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: admin
            RABBITMQ_DEFAULT_PASS: dockerpswd
        ports:
            - "15672:15672"
        networks:
            - backend

    spotlight:
        image: dbpedia/spotlight-french:0.7.1
        ports:
            - "2225:80"
        command: "spotlight.sh"
        environment:
            JAVA_OPTS: -Xmx8g
        networks:
            - backend

    migration:
        build: ./PEBackend
        command: bash -c " sleep 30&&
            python manage.py makemigrations &&
            python manage.py migrate"
        volumes:
            - ./PEBackend:/web-django
        depends_on:
            - mongodb
        networks:
            - backend

    initialization:
        build: ./PEBackend
        command: bash -c " sleep 50 &&
            python manage.py runscript populate-Database"
        volumes:
            - ./PEBackend:/web-django
        depends_on:
            - mongodb
            - migration
        networks:
            - backend

    api:
        restart: always
        build: 
            context: ./PEBackend/ 
            dockerfile: Dockerfile   
        container_name: django
        environment:
            RMQ_USER: admin
            RMQ_PASS: dockerpswd
        volumes:
            - web-django:/usr/src/PEBackend
            - web-static:/usr/src/static
        ports:
            - "8000:8000"
        depends_on:
            - migration
        networks:
            - backend
            - frontend

    linkedin_crawler:
        build: ./workers/
        environment:
            PROVIDER: linkedin

            MONGO_USER: admin
            MONGO_PASS: dockerpswd
            RMQ_USER: admin
            RMQ_PASS: dockerpswd
        depends_on:
            - rabbitmq
        networks:
            - backend

    front:
        restart: always
        depends_on: 
            - api
        container_name: pe_front
        build:
            context: ./front
            dockerfile: Dockerfile
        volumes:
            - ./front:/PE_ICC/front
        ports:
            - "80:4200"
        networks:
            - frontend

networks: 
    backend:
        driver: bridge
    frontend:
        driver: bridge

volumes:
    web-django:
    web-static: 
    data-volume:
